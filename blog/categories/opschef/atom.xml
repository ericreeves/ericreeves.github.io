<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: OpsChef | [ Alluvium ]]]></title>
  <link href="http://alluvium.com/blog/categories/opschef/atom.xml" rel="self"/>
  <link href="http://alluvium.com/"/>
  <updated>2013-05-03T22:55:26-05:00</updated>
  <id>http://alluvium.com/</id>
  <author>
    <name><![CDATA[Eric Reeves]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[The Application Cookbook Pattern, Berkshelf, and Team Chef Workflow]]></title>
    <link href="http://alluvium.com/blog/2013/05/03/the-application-cookbook-pattern-berkshelf-and-team-chef-workflow/"/>
    <updated>2013-05-03T21:48:00-05:00</updated>
    <id>http://alluvium.com/blog/2013/05/03/the-application-cookbook-pattern-berkshelf-and-team-chef-workflow</id>
    <content type="html"><![CDATA[<h2>Berkshelf</h2>

<p>I am a fan of "The Berkshelf Way".</p>

<p>If you aren't familiar with Berkshelf or the Application Cookbook pattern, do yourself a favor and spend some time on the following links...</p>

<!--more-->


<ul>
<li><a href="http://berkshelf.com/">Berkshelf</a> - The official Berkshelf docs.</li>
<li><a href="http://www.youtube.com/watch?v=hYt0E84kYUI">Jamie@ChefConf</a> - Jamie Winsor's "The Berkshelf Way" talk from <a href="http://chefconf.opscode.com/">ChefConf</a> 2013.</li>
<li><a href="http://devopsanywhere.blogspot.com/2012/11/how-to-write-reusable-chef-cookbooks.html">GangnamStyle</a> - Bryan Berry's "How to Write Reusable Chef Cookbooks, Gangnam Style" blog post</li>
<li><a href="http://foodfight.libsyn.com/episode-24-jamie-winsor-and-michael-ivey-on-berkshelf">FoodFightShow24</a> - Jamie Winsor and Michael Ivey from Riot Games on the FoodFightShow.  Why they wrote Berkshelf, and why they don't like Roles.</li>
<li><a href="http://foodfight.libsyn.com/episode-32-there-s-a-spork-in-my-berkshelf-talkin-bout-workflow">FoodFightShow32</a> - Etsy and Riot Games both talking about their unique approaches to Team Chef Development.</li>
<li><a href="http://vialstudios.com/guide-authoring-cookbooks.html">GuideToAuthoringCookbooks</a> - A tutorial that will demonstrate the awesomeness of the workflow that the <a href="http://berkshelf.com/">Berkshelf</a>/<a href="http://vagrantup.com/">Vagrant</a> combo provides.</li>
</ul>


<p><em>The authors of the above content deserve nearly full credit for the rest of this blog post, and a number of ideas I have for future posts.</em></p>

<p>I have had great success using <a href="http://berkshelf.com/">Berkshelf</a>/<a href="http://vagrantup.com/">Vagrant</a> to rapidly iterate on a Cookbook and get quick feedback on changes.  And now with Vagrant 1.1's provider plugin interface, this workflow does not limit you to just Virtualbox.  There are already provider plugins for AWS and Rackspace among others.  Hurrah!</p>

<h2>Team Chef Development</h2>

<p>The next step is figuring out how to manage Cookbook versioning in a multi-user development environment, and ensuring that teams aren't repeating each others work or stepping on each other's toes.  Cookbooks must be shared between teams, and these shared Cookbooks must be well-tested given the impact is potentially much wider than just a single team.  This is a bit trickier...</p>

<p>Here are a few ground rules that could be the basis of a sound Team Chef Development Workflow:</p>

<ul>
<li>Only Application Cookbooks get assigned to Nodes.  Not Library Cookbooks, or Roles.  (Stick with me for a second...)</li>
<li>Library Cookbooks should change their behavior based upon configured Attributes.</li>
<li>Attributes only get set in two places: the metadata.rb of the Application Cookbook, and the Environment.   This makes troubleshooting much easier.</li>
<li>Search by Tags to locate Nodes, not by run_list entry or Role.  This is a much more flexible solution, and allows you to do things like only add your web server to the load balancer once you have verified it and set the Tag.  (Or abandon search all-together and start using a service registry like ZooKeeper, but that's another blog post).</li>
<li>Community Cookbooks pulled in as dependencies by Berkshelf should not be forked internally, unless it is unavoidable.  If you must fork perhaps due to an unfixed bug, strive to update the Cookbook, make it more flexible to meet your needs, add some tests, and send in a pull request.  This way the community benefits from the work, and you will continue to gain the benefits of future community-added features without the burden of maintaining and updating a fork.</li>
<li>Versioning of internal Cookbooks should be managed by the build server, and ONLY the build server.</li>
</ul>


<h2>Why Roles Are An Issue</h2>

<p>This is a controversial subject, but I have a problematic use case that we have already been bitten by, and I cannot solve easily with Roles.</p>

<ul>
<li>Teams A, and B are both working on the Chef server.  Both teams are working on the web_server Role.</li>
<li>Team B needs to run a bleeding edge version of the web stack which requires an additional Recipe in the web_server run_list.</li>
<li>Team A's stuff explodes because Roles are global variables and the new Recipe isn't in their Cookbook.</li>
</ul>


<p>I know you can setup Environment-specific run_lists, but we routinely have 15+ dev/test environments up.  This is clearly not a maintainable solution.</p>

<p>At the end of the day, Roles only do 3 things:</p>

<ul>
<li>Set a run_list</li>
<li>Set Attributes</li>
<li>Tag a node with a friendly name</li>
</ul>


<p>If you use an Application Cookbook to accomplish #1 and #2, then suddenly your Role is versioned and can be pinned differently per Environment on your Chef server.  If you change your Chef searches to look for a Node Tag instead of a Role, then you actually gain
a little bit of flexibility.  Ever wanted to verify a new web server by hand before you brought it in to the load balancer pool?  Don't Tag it until you're ready, instead of having the Role immediately match a search.</p>

<p>Thoughts on any of this?</p>

<p>I'm planning on some future posts to go in to more detail on some of these areas...  Particularly CI and testing!</p>
]]></content>
  </entry>
  
</feed>
